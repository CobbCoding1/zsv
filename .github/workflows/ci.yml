name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    branches: [main]
    types: [created]

jobs:
  ci:
    name: ci
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]

    runs-on: ${{ matrix.os }}

    env:
      AMD64_LINUX_GCC: amd64-linux-gcc
      AMD64_LINUX_CLANG: amd64-linux-clang
      AMD64_WINDOWS_MINGW: amd64-windows-mingw
      AMD64_MACOSX_CLANG: amd64-macosx-clang
      AMD64_FREEBSD_GCC: amd64-freebsd-gcc
      ARTIFACT_DIR: .artifacts
      ARTIFACT_RETENTION_DAYS: 5

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install MinGW cross-compiler on Linux
      if: runner.os == 'Linux'
      run: sudo apt update && sudo apt install -y mingw-w64

    # --- Build ---

    - name: Build on Linux (${{ env.AMD64_LINUX_GCC }})
      if: runner.os == 'Linux'
      env:
        PREFIX: ${{ env.AMD64_LINUX_GCC }}
        CC: gcc
        MAKE: make
        RUN_TESTS: true
      shell: bash
      run: ./scripts/ci-build.sh

    - name: Build on Linux (${{ env.AMD64_LINUX_CLANG }})
      if: runner.os == 'Linux'
      env:
        PREFIX: ${{ env.AMD64_LINUX_CLANG }}
        CC: clang
        MAKE: make
        RUN_TESTS: true
      shell: bash
      run: ./scripts/ci-build.sh

    - name: Build on Linux (${{ env.AMD64_WINDOWS_MINGW }})
      if: runner.os == 'Linux'
      env:
        PREFIX: ${{ env.AMD64_WINDOWS_MINGW }}
        CC: x86_64-w64-mingw32-gcc
        MAKE: make
        RUN_TESTS: false
      shell: bash
      run: ./scripts/ci-build.sh

    - name: Build on macOS (${{ env.AMD64_MACOSX_CLANG }})
      if: runner.os == 'macOS'
      env:
        PREFIX: ${{ env.AMD64_MACOSX_CLANG }}
        CC: clang
        MAKE: make
        RUN_TESTS: false
      shell: bash
      run: |
        # coreutils required for realpath
        brew install coreutils tree
        ./scripts/ci-build.sh
        ./$PREFIX/bin/zsv version

    - name: Build on macOS (${{ env.AMD64_FREEBSD_GCC }})
      if: runner.os == 'macOS'
      env:
        PREFIX: ${{ env.AMD64_FREEBSD_GCC }}
        CC: gcc
        MAKE: gmake
        RUN_TESTS: false
      uses: vmactions/freebsd-vm@v0.1.5
      with:
        envs: 'PREFIX CC MAKE RUN_TESTS ARTIFACT_DIR'
        usesh: true
        prepare: pkg install -y tree zip gmake lang/gcc
        run: ./scripts/ci-build.sh

    # --- Upload build artifacts ---

    - name: Rename build artifacts
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      run: ./scripts/ci-prepare-artifacts-for-upload.sh

    - name: Upload (${{ env.AMD64_LINUX_GCC }}.zip)
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: zsv-${{ env.AMD64_LINUX_GCC }}.zip
        path: ${{ env.ARTIFACT_DIR }}/zsv-${{ env.AMD64_LINUX_GCC }}.zip
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        if-no-files-found: error

    - name: Upload (${{ env.AMD64_LINUX_CLANG }}.zip)
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: zsv-${{ env.AMD64_LINUX_CLANG }}.zip
        path: ${{ env.ARTIFACT_DIR }}/zsv-${{ env.AMD64_LINUX_CLANG }}.zip
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        if-no-files-found: error

    - name: Upload (${{ env.AMD64_WINDOWS_MINGW }}.zip)
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: zsv-${{ env.AMD64_WINDOWS_MINGW }}.zip
        path: ${{ env.ARTIFACT_DIR }}/zsv-${{ env.AMD64_WINDOWS_MINGW }}.zip
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        if-no-files-found: error

    - name: Upload (${{ env.AMD64_MACOSX_CLANG }}.zip)
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v3
      with:
        name: zsv-${{ env.AMD64_MACOSX_CLANG }}.zip
        path: ${{ env.ARTIFACT_DIR }}/zsv-${{ env.AMD64_MACOSX_CLANG }}.zip
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        if-no-files-found: error

    - name: Upload (${{ env.AMD64_FREEBSD_GCC }}.zip)
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v3
      with:
        name: zsv-${{ env.AMD64_FREEBSD_GCC }}.zip
        path: ${{ env.ARTIFACT_DIR }}/zsv-${{ env.AMD64_FREEBSD_GCC }}.zip
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        if-no-files-found: error

    # --- Upload release artifacts ---

    - name: Get release tag
      uses: dawidd6/action-get-tag@v1
      if: startsWith(github.ref, 'refs/tags/v')
      id: tag
      with:
        strip_v: true

    - name: Rename release artifacts with tag
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        TAG: ${{ steps.tag.outputs.tag }}
      run: ./scripts/ci-prepare-artifacts-for-upload.sh

    - name: Upload release artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        files: ${{ env.ARTIFACT_DIR }}/*.zip
